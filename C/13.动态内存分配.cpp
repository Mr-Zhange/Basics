/**
 *13、动态内存分配
 *	传统数组的缺点
 *		1、数组长度必须事先指定，且只能是常整数，不能是变量
 *			例子：
 *				int a[5];	//OK
 *				int len = 5; int a[len];	//error
 *
 *		2、传统形式定义的数组，该数组的内存，程序员无法手动释放
 *			数组一旦定义，系统为该数组分配的存储空间就会一直存在，除非数组所在的函数运行结束
 *
 *		3、数组的长度不能在函数运行的过程中动态的扩充或缩小
 *
 *		4、A函数定义的数组，在A函数运行期间可以被其他函数使用，
 *			但A函数运行完毕之后，A函数中的数组将无法再被其他函数使用
 *
 *	为什么需要动态分配内存
 *		动态数组很好的解决了传统数组的缺陷
 *		传统数组也叫静态数组
 *
 *
 *
 *	动态内存分配举例：动态数组的构造
 *	静态内存和动态内存的比较
 *	跨函数使用内存
 */

#include <stdio.h>

void f()
{
	//20个字节的存储空间程序员无法手动释放，
	//它只能在本函数运训完毕时由系统自动释放
	int a[5] = {1,2,3,4,5};
}

void main()
{

}