/**
 * 10、指针
 * 	表示一些复杂的数据结构
 * 	快速的传递数据
 * 	使函数返回一个以上的值
 * 	能直接访问硬件
 * 	能够方便的使用字符串
 * 	是理解面向对象语言中引用的基础
 *
 * 		指针的定义
 * 			地址
 * 				内存单元的编号
 * 				从零开始的非负整数
 * 				范围：4G {0 - 4G-1}
 * 			指针
 * 				指针就是地址，地址就是指针
 * 				指针变量就是存放内存单元编号的变量，或者说，指针变量就是存放地址的变量
 * 				指针和指针变量是两个不同的概念
 * 				但是注意：通常我们叙述时会把指针变量简称为指针，实际它们并不一样
 * 				指针的本质就是一个操作受限的非负整数
 *
 * 		指针的分类
 * 			1、基本类型指针
 * 			2、指针和数组
 * 			3、指针和函数
 * 			4、指针和结构体
 * 			5、多级指针
 */

# include <stdio.h>

int main()
{
	//p是变量名，int * 表示p变量存放的是int类型变量的地址
	int * p;

	int i = 3;

	p = &i;
	/**
	 * 1、p保存了i的地址，因此p指向i
	 * 2、p不是i，i也不是p。更准确的说：修改p的值不影响i的值，修改i的值不影响p
	 * 3、如果一个指针变量指向了某个普通变量，则
	 * 		*指针变量	就完全等同于	普通变量
	 * 	例子：
	 * 		如果p是个指针变量，并且p存放了普通变量i的地址
	 * 		则：p指向了普通变量i
	 * 			*p 就完全等同于 i
	 * 			*p = i
	 * 			所有出现*p的地方都可以替换成i
	 * 			所有出现i的地昂都可以替换成*p
	 */

	printf("%d\n", p);

	*p = i;

	printf("%d\n", *p);
	printf("%d\n", p);
}